
#include "stdafx.h"
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#define MAX_SIZE 101
int arr[MAX_SIZE];
int top = 0;
typedef struct node
{
	int data;
	struct node* left;
	struct node* right;
}node;
struct node* root = NULL;
int count = 0;
struct node* Insert(int data)
{
	node *temp = (node *)malloc(sizeof(node));
	temp->data = data;
	temp->left = NULL;
	temp->right = NULL;
	return temp;
}
int DeleteAllRootnodes(struct node* root)
{
	if (root == NULL)
	{
		return 0;
	}
	
	else
	{
		 DeleteAllRootnodes(root->left);
		 DeleteAllRootnodes(root->right);
		 if (root->left == NULL && root->right == NULL)
		 {
			 arr[top] = root->data;
			 top++;
			 return count = count + 1;
		 }
	}
	return count;
}
void PreOrder(struct node* root)
{
	if (root != NULL)
	{
		printf("%d \n", root->data);
		PreOrder(root->left);
		PreOrder(root->right);
	}
}

int main()
{
	root = Insert(10);
	root->left = Insert(2);
	root->left->left = Insert(7);
	root->right = Insert(5);
	root->right->left = Insert(8);
	root->right->right = Insert(3);
	root->right->right->right = Insert(3);
	int  result=DeleteAllRootnodes(root);
	printf("Number of leaf node %d \n", result);
	int i = 0;
	for (i =0; i < sizeof(arr) / sizeof(arr[0]); i++)
	{
		if (arr[i] != NULL)
		{
			printf("leaf node  %d \n", arr[i]);
		}
	}
	PreOrder(root);
	getchar();
	return 0;
}


