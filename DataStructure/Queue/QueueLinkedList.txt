#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
typedef struct node
{
	int data;
	struct node* next;
}node;
struct node* top = NULL;
struct node* rear = NULL;
void Enqueue(int x)
{
	struct node* temp;
	temp = (struct node*)malloc(sizeof(struct node));
	temp->data = x;
	temp->next = NULL;
	if (top == NULL && rear == NULL)
	{
		top = rear = temp;

	}
	else
	{
		rear->next = temp;
		rear = temp;
	}
}
void Dequeue()
{
	struct node*temp = top;
	if (top == NULL && rear == NULL)
	{
		printf("No items to delete");
	}
	else if (top == rear)
	{
		top = rear = NULL;
		free(temp);
	}
	else
	{
		top = temp->next;
		free(temp);
	}

}
void IsEmpty()
{
	struct node*temp = top;
	if (top != NULL)
	{
		printf("List is no empty");
	}
	else
	{
		printf("List is Empty");
	}

}
void Front()
{
	struct node*temp = top;
	if (top != NULL)
	{
		printf("%d", temp->data);

	}

}
void Print()
{
	struct node* temp = rear;
	temp = top;
	printf("\n");
	while (temp != NULL)
	{
		printf("%d\n", temp->data);
		temp = temp->next;
	}
	printf("\n");
}
void main()
{
	Enqueue(5);
	Enqueue(10);
	Enqueue(15);
	Print();
	Dequeue();
	Dequeue();
	Print();
}
